import chai: expect
import supertest as request
import redis

import ../app

client = redis.createClient()


describe('Express server', () ->
  beforeEach((done) ->
    client.select(2, () ->
      client.del('frigg:queue', () ->
        done()
      )
    )
  )

  describe('/*', () ->
    it('should redirect to frigg.io', (done) ->
      request(app)
        .get('/')
        .expect(302, done)
    )
  )

  describe('/fetch', () ->
    it('should return 403 without token', (done) ->
      request(app)
        .get('/fetch')
        .expect(403, done)
    )

    it('should return 200 if there is no job', (done) ->
      request(app)
        .get('/fetch')
        .set('x-frigg-worker-token', 'token')
        .expect(200)
        .end((err, res) ->
          if err
            return done(err)

          expect(res.body.job).to.equal(null)
          done()
        )
    )

    it('should return job', (done) ->
      jobObj = {
        branch: 'master'
        clone_url: 'url'
      }
      client.select(2, () ->
        client.lpush('frigg:queue', JSON.stringify(jobObj))
      )
      request(app)
        .get('/fetch')
        .set('x-frigg-worker-token', 'token')
        .expect(200)
        .end((err, res) ->
          if err
            return done(err)

          expect(res.body.job.branch).to.equal('master')
          expect(res.body.job.clone_url).to.equal('url')
          done()
        )
    )
  )
)
